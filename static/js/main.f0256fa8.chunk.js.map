{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","console","log","className","href","Counter","prevProps","prevState","this","getBadgeClasses","formatCount","onClick","props","onIncrement","counter","onDecrement","disabled","value","onDelete","id","classes","count","Component","Counters","onReset","counters","map","App","state","handleIncrement","index","indexOf","setState","handleDecrement","handleReset","c","handleDelete","counterId","filter","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0256fa8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// stateless Functional Component\nconst NavBar = ({totalCounters})=>{\n    console.log('NavBar - Rendered');\n    return (\n        <nav className=\"navbar navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"#\">\n                Navbar {\" \"}\n                <span className=\"badge badge-pill badge-secondary\">\n                    {totalCounters}\n                </span>\n            </a>\n        </nav>\n    );\n};\n \nexport default NavBar;","import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  componentDidUpdate(prevProps, prevState){\n    console.log('prevProps',prevProps);\n    console.log('prevState',prevState);\n  }\n\n  componentWillUnmount(){\n    console.log(\"Counter - Unmount\");\n  }\n\n  render() {\n    console.log('Counter - Rendered');\n    return (\n      <div className=\"row\">\n        <div className=\"col-1\">\n          <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        </div>\n        <div className=\"col\">\n          <button\n            onClick={() => this.props.onIncrement(this.props.counter)}\n            className=\"btn btn-secondary btn-sm m-2\"\n          >\n            +\n          </button>\n          <button\n            onClick={() => this.props.onDecrement(this.props.counter)}\n            className=\"btn btn-secondary btn-sm \"\n            disabled={this.props.counter.value === 0 ? \"disabled\" : \"\"}\n          >\n            -\n          </button>\n          <button \n            onClick={() => this.props.onDelete(this.props.counter.id)} \n            className=\"btn btn-danger btn-sm m-2\"\n          >\n            Delete\n          </button>\n          </div>\n\n        \n        \n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value: count } = this.props.counter;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;","import React, { Component } from 'react';\nimport Counter from './counter';\n\nclass Counters extends Component {\n        render() { \n            console.log('Counters - Rendered');\n            const {onReset,counters,onDelete,onIncrement,onDecrement} = this.props;\n        return(\n        <div>\n            <button\n            onClick={onReset} \n            className=\"btn btn-primary btn-sm m-2\">Reset</button>\n            {counters.map(counter => (\n                <Counter \n                    key={counter.id} \n                    onDelete= {onDelete}\n                    onIncrement = {onIncrement}\n                    onDecrement = {onDecrement}\n                    counter={counter}\n                />\n            ))}\n        </div>\n    );\n    }\n}\n \nexport default Counters;","import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    counters: [\n        {id: 1, value: 4},\n        {id: 2, value: 0},\n        {id: 3, value: 0},\n        {id: 4, value: 0}\n    ]\n};\n  constructor(){\n    super();\n    console.log('App - Constructor');\n  }\n\n  componentDidMount(){\n    console.log('App - Mounted');\n  }\n\nhandleIncrement = counter => {\n  const counters = [...this.state.counters];\n  const index = counters.indexOf(counter);\n  counters[index] = {...counter};\n  counters[index].value++;\n  this.setState({ counters });\n};\n\nhandleDecrement = counter => {\n  const counters = [...this.state.counters];\n  const index = counters.indexOf(counter);\n  counters[index] = {...counter};\n  counters[index].value--;\n  this.setState({ counters });\n};\n\nhandleReset = () => {\n    const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n    });\n    this.setState({counters});\n};\n\nhandleDelete =counterId=>{\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters }) ;\n};\n\nrender() { \n    console.log('App - Rended');\n\n    return (\n      <React.Fragment>\n        <NavBar totalCounters={this.state.counters.filter(c=> c.value>0).length}/>\n        <main className =\"container\">\n          <Counters \n              counters={this.state.counters}\n              onReset={this.handleReset} \n              onIncrement={this.handleIncrement} \n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete} \n            />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}